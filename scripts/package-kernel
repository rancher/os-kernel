#!/bin/bash
set -e

cd $(dirname $0)/..

source scripts/build-common
source scripts/version

SOURCEDIR=${BUILD}/${VERSION}
while [ "$#" -gt 0 ]; do
    case $1 in
        --srcdir)
            shift 1
            SOURCEDIR="$1"
            ;;
        *)
            break
            ;;
    esac
    shift 1
done



export CCACHE_DIR="${HOME}/.kernel-ccache"
export CC="ccache gcc"
export PATH="/usr/lib/ccache:$PATH"
KERNEL=$(basename ${KERNEL_URL})
FIRMWARE=$(readlink -f scripts/firmware)
MODULE_LIST=$(readlink -f modules.list)
MODULE_EXTRA_LIST=$(readlink -f modules-extra.list)

echo "looking for /source/dist/kernel/extra-linux-${KERNEL_VERSION}-x86.tar.gz"
echo "looking for /source/dist/kernel/build-linux-${KERNEL_VERSION}-x86.tar.gz"
echo "looking for /source/dist/kernel/linux-${KERNEL_VERSION}-x86.tar.gz"
if [ -e "/source/dist/kernel/linux-${KERNEL_VERSION}-x86.tar.gz" ] \
   && [ -e "/source/dist/kernel/extra-linux-${KERNEL_VERSION}-x86.tar.gz" ] \
   && [ -e "/source/dist/kernel/build-linux-${KERNEL_VERSION}-x86.tar.gz" ]; then
    echo "Skipping packaging of kernel, extras and headers - already found in ./dist/kernel/"
else
    cd ${SOURCEDIR}
    KVER=$(make kernelrelease)

    create_firmware_tar $FIRMWARE

    mkdir -p ${DIST}/kernel

    FILE="linux-${KVER}-x86.tar"

    (
        split_tar $FILE $MODULE_LIST $MODULE_EXTRA_LIST
    )

    tar --concatenate --file=base.tar firmware.tar
    tar --concatenate --file=extra.tar firmware-extra.tar
    cat base.tar | gzip -c > ${DIST}/kernel/linux-${KERNEL_VERSION}-x86.tar.gz
    cat extra.tar | gzip -c > ${DIST}/kernel/extra-linux-${KERNEL_VERSION}-x86.tar.gz
    list_build_files | tar -czf ${DIST}/kernel/build-linux-${KERNEL_VERSION}-x86.tar.gz -T /dev/stdin
    cp .config ${DIST}/kernel/config
fi
